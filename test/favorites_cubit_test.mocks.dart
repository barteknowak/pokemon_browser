// Mocks generated by Mockito 5.3.2 from annotations
// in pokemon_browser/test/favorites_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pokemon_browser/core/domain/entity/favorite.dart' as _i4;
import 'package:pokemon_browser/core/domain/repository/favorites_repository.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [FavoritesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavoritesRepository extends _i1.Mock
    implements _i2.FavoritesRepository {
  MockFavoritesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> saveFavorite(_i4.Favorite? favorite) => (super.noSuchMethod(
        Invocation.method(
          #saveFavorite,
          [favorite],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> removeFavorite(_i4.Favorite? favorite) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFavorite,
          [favorite],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<List<_i4.Favorite>> getFavorites() => (super.noSuchMethod(
        Invocation.method(
          #getFavorites,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Favorite>>.value(<_i4.Favorite>[]),
      ) as _i3.Future<List<_i4.Favorite>>);
  @override
  _i3.Future<bool> isFavorite(String? id) => (super.noSuchMethod(
        Invocation.method(
          #isFavorite,
          [id],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
